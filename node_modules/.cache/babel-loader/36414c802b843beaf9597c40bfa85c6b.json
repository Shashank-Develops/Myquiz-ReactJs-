{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhaun\\\\Downloads\\\\starter\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nexport default function App() {\n  const questions = [{\n    questionText: 'What is the capital of India?',\n    answerOptions: [{\n      answerText: 'New Delhi',\n      isCorrect: true\n    }, {\n      answerText: 'Dehradun',\n      isCorrect: false\n    }, {\n      answerText: 'Kolkata',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Which programming language is used to built this quiz?',\n    answerOptions: [{\n      answerText: 'Java',\n      isCorrect: false\n    }, {\n      answerText: 'Python',\n      isCorrect: false\n    }, {\n      answerText: 'Javascript',\n      isCorrect: true\n    }]\n  }, {\n    questionText: 'In which state Kedarnath is located?',\n    answerOptions: [{\n      answerText: 'Tamil Nadu',\n      isCorrect: false\n    }, {\n      answerText: 'Uttarakhand',\n      isCorrect: true\n    }, {\n      answerText: 'Himachal Pradesh',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who is basketball player among this?',\n    answerOptions: [{\n      answerText: 'Virat Kohli',\n      isCorrect: false\n    }, {\n      answerText: 'Stephen Curry',\n      isCorrect: true\n    }, {\n      answerText: 'Messi',\n      isCorrect: false\n    }]\n  }];\n  const [CurrentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect == true) {\n      alert(\"This is a correct answer!\");\n      setScore(score + 1);\n    }\n\n    const nextQuestion = CurrentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \"Congrats\\uD83E\\uDD73\\uD83C\\uDF89\\uD83D\\uDC4F\\uD83E\\uDD1D\\uD83D\\uDC4D\\uD83C\\uDF37You have completed quiz and scored \", score, \" out of \", questions.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }\n  }, \"Question \", CurrentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, questions[CurrentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, questions[CurrentQuestion].answerOptions.map(answerOptions => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerButtonClick(answerOptions.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, answerOptions.answerText)))));\n}","map":{"version":3,"sources":["C:/Users/dhaun/Downloads/starter/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isCorrect","CurrentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerButtonClick","alert","nextQuestion","length","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of India?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New Delhi', isCorrect: true },\n\t\t\t\t{ answerText: 'Dehradun', isCorrect: false },\n\t\t\t\t{ answerText: 'Kolkata', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Which programming language is used to built this quiz?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Java', isCorrect: false },\n\t\t\t\t{ answerText: 'Python', isCorrect: false},\n\t\t\t\t{ answerText: 'Javascript', isCorrect: true },\n\t\t\t\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'In which state Kedarnath is located?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Tamil Nadu', isCorrect: false},\n\t\t\t\t{ answerText: 'Uttarakhand', isCorrect: true },\n\t\t\t\t{ answerText: 'Himachal Pradesh', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is basketball player among this?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Virat Kohli', isCorrect: false },\n\t\t\t\t{ answerText: 'Stephen Curry', isCorrect: true },\n\t\t\t\t{ answerText: 'Messi', isCorrect: false },\n\t\t\t],\n\t\t},\n\t];\n   \n\tconst [CurrentQuestion,setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tconst handleAnswerButtonClick = (isCorrect)=>{\n if(isCorrect == true){\n\talert(\"This is a correct answer!\");\n\tsetScore(score + 1);\n }\n\t\tconst nextQuestion = CurrentQuestion + 1;\n\t\tif(nextQuestion< questions.length){\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t}\n\t\telse{\n         setShowScore(true);\n\t\t}\n\t}\n\treturn (\n\t\t<div className='app'>\n\t\t\t{/* HINT: replace \"false\" with logic to display the \n      score when the user has answered all the questions */}\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>Congrats🥳🎉👏🤝👍🌷You have completed quiz and scored {score} out of {questions.length}</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {CurrentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[CurrentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[CurrentQuestion].answerOptions.map((answerOptions)=>(\n\t\t\t\t\t\t<button onClick = {() => handleAnswerButtonClick(answerOptions.isCorrect)}>{answerOptions.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}